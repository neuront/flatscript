include 'misc.fls' as misc
include 'globals.fls' as _g
include 'backend/mangle.fls' as mangle

g: _g.g()

func exportPointForBrowser()
    if g.opt_export_point = null
        return 'window'
    return '(window.#EP# = window.#EP# || {})'.replace(/#EP#/g, g.opt_export_point)

export func wrapGlobal(global)
    r: ['/* Generated by Flatscript:' + misc.version + ' */\n']
    params: []
    args: []
    if g.use_export
        params.push(mangle.TERM_EXPORT)
        args.push(
            "typeof module !== 'undefined' && typeof module.exports !== 'undefined'" +
            " ? module.exports : " + exportPointForBrowser())

    r.push(
        '(function(' + params.join(',') + ') {'
            # From https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys
        +   'if (!Object.keys) {'
        +     'Object.keys = (function() {'
        +       '"use strict";'
        +       'var hasOwnProperty = Object.prototype.hasOwnProperty,'
        +           'hasDontEnumBug = !({ toString: null }).propertyIsEnumerable("toString"),'
        +           'dontEnums = ['
        +             '"toString",'
        +             '"toLocaleString",'
        +             '"valueOf",'
        +             '"hasOwnProperty",'
        +             '"isPrototypeOf",'
        +             '"propertyIsEnumerable",'
        +             '"constructor"'
        +           '],'
        +           'dontEnumsLength = dontEnums.length;'
        +       'return function(obj) {'
        +         'if (typeof obj !== "object" && (typeof obj !== "function" || obj === null)) {'
        +           'throw new TypeError("Object.keys called on non-object");'
        +         '}'
        +         'var result = [], prop, i;'
        +         'for (prop in obj) {'
        +           'if (hasOwnProperty.call(obj, prop)) {'
        +             'result.push(prop);'
        +           '}'
        +         '}'
        +         'if (hasDontEnumBug) {'
        +           'for (i = 0; i < dontEnumsLength; i++) {'
        +             'if (hasOwnProperty.call(obj, dontEnums[i])) {'
        +               'result.push(dontEnums[i]);'
        +             '}'
        +           '}'
        +         '}'
        +         'return result;'
        +       '};'
        +     '}());'
        +   '}'
    )

    if g.use_class_ext
        r.push(
            'function $extend(i, base) {'
            +     'for (var k in base) {'
            +         'if (base.hasOwnProperty(k)) {'
            +             'i[k] = base[k]'
            +         '}'
            +     '}'
            +     'function ctor() {'
            +         'this.constructor = i'
            +     '}'
            +     'ctor.prototype = base.prototype;'
            +     'i.prototype = new ctor();'
            +     'i.$super = base.prototype;'
            +     'return i'
            + '}'
        )

    if g.use_list_slice
        r.push(
            'function $listslice($list, $begin, $end, $step) {'
            +     'function $rnd(x, dft) {'
            +         'if (x === undefined) return dft;'
            +         'if (x > $list.length) return $list.length;'
            +         'if (x < 0) return x % $list.length + $list.length;'
            +         'return x'
            +     '}'
            +     'if (!$step || $step == 1) {'
            +         'return $list.slice($begin, $end)'
            +     '}'
            +     'var r = [];'
            +     'if ($step > 0) {'
            +         '$begin = $rnd($begin, 0);'
            +         '$end = $rnd($end, $list.length);'
            +         'for (; $begin < $end; $begin += $step) {'
            +             'r.push($list[$begin]);'
            +         '}'
            +     '} else {'
            +         '$begin = $rnd($begin, $list.length - 1);'
            +         '$end = $rnd($end, -1);'
            +         'for (; $begin > $end; $begin += $step) {'
            +             'r.push($list[$begin]);'
            +         '}'
            +     '}'
            +     'return typeof $list === "string" ? r.join("") : r'
            + '}'
        )

    if g.use_pipeline
        r.push(
            'function $listpipesync($list, $next) {'
            +     'if (!($list)) return;'
            +     'var $result = [];'
            +     'var $ind = 0;'
            +     'for (var $k in $list) {'
            +         'if ($list.hasOwnProperty($k)) {'
            +             '$next($ind, $k, $list[$k], $result);'
            +             '++$ind;'
            +         '}'
            +     '}'
            +     'return $result;'
            + '}'
        )

    return (r ++ [global.toString(), '})(', args.join(','), ');']).join('')
